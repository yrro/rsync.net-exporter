ARG PYTHON_SUFFIX=3.11
ARG RELEASEVER=9

FROM registry.access.redhat.com/ubi${RELEASEVER}/ubi-minimal as builder

ARG PYTHON_SUFFIX
ARG RELEASEVER

RUN \
  microdnf -y --nodocs --setopt=install_weak_deps=0 install \
    python${PYTHON_SUFFIX} \
    python${PYTHON_SUFFIX}-pip \
    buildah \
  && microdnf -y clean all

# Disable ~/.cache/pip until we set up a cache volume during container image
# building.
#
ENV PIP_NO_CACHE_DIR=off PIP_ROOT_USER_ACTION=ignore

RUN python${PYTHON_SUFFIX} -m pip install build micropipenv[toml]

WORKDIR /opt/app-build

COPY pyproject.toml poetry.lock .

# Build the app's wheel.

COPY src src

RUN python${PYTHON_SUFFIX} -m build -w -v

# Create the runtime virtual environment for the app.
#
RUN \
  python${PYTHON_SUFFIX} -m venv \
    --without-pip \
    /opt/app-root/venv

# Cause subsequent pip invocations to install into the runtime virtual
# environment.
#
ENV PIP_PYTHON=/opt/app-root/venv/bin/python

# Install dependencies and the app's built wheel.

RUN \
  MICROPIPENV_PIP_BIN=pip${PYTHON_SUFFIX} \
  python${PYTHON_SUFFIX} -m micropipenv \
    install --deploy

RUN python${PYTHON_SUFFIX} -m pip install --no-deps dist/*.whl

# Create the runtime container

COPY gunicorn.conf.py build-inside.py .

RUN python${PYTHON_SUFFIX} build-inside.py

# vim: ts=8 sts=2 sw=2 et
